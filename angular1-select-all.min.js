/*
 angular1-select-all module.
 @version 1.0.0
 @link https://manikantag/github.io/angular1-select-all
 @author Manikanta G
 @license MIT License, http://www.opensource.org/licenses/MIT
*/
(function(){angular.module("angular1-select-all",[]).value("mgCbSelectAllConfig",{memberModelKey:"__selected"}).directive("mgCbGroup",function(){return{scope:{},restrict:"AE",controller:["$scope",function(f){var c;f.$on("$destroy",function(){c=null});return{notify:function(e,a){c&&c(e,a)},subscribe:function(e){c=e}}}]}}).directive("mgCbSelectAll",["$timeout","mgCbSelectAllConfig",function(f,c){var e=c.memberModelKey||"__selected";return{scope:{mgCbSelectAll:"=",mgCbSelectedCount:"=",ngModel:"="},
restrict:"AE",require:["ngModel","^mgCbGroup"],link:function(a,c,k,g){function l(b){var c,d=a.mgCbSelectAll.length;for(c=0;c<d;c++)a.mgCbSelectAll[c][e]=b;a.mgCbSelectedCount=b?d:0}function n(){var b,c=a.mgCbSelectAll.length,d=0;for(b=0;b<c;b++)a.mgCbSelectAll[b][e]&&d++;return d}var d=g[0];c=g[1];var h=!0;console.debug("mgCbSelectAll: Using '%s' as memberModelKey",e);f(function(){a.mgCbSelectedCount=n()});c.subscribe(function(b,c){console.debug("mgCbSelectAll: subscribe(): new event",b,c);a.$apply(function(){a.ngModel=
{bymgCbMember:!0}})});d.$parsers.push(function(b){h||(console.debug("mgCbSelectAll: $parsers(): view value changed to %s --\x3e updating all checkboxes",b),l(b));h&&(h=!1);return b});d.$formatters.push(function(b){if(b||!h)angular.isObject(b)&&b.bymgCbMember?(console.debug("mgCbSelectAll: $formatters(): model value changed to %s by mg-cb-member/mg-cb-clear directive --\x3e re-calculating selected count",b),a.mgCbSelectedCount=n(),b=a.mgCbSelectedCount===a.mgCbSelectAll.length,d.$modelValue=b,a.ngModel=
b):(console.debug("mgCbSelectAll: $formatters(): model value changed to %s --\x3e updating all checkboxes",b),l(b));h&&(h=!1);return b});a.$watch("mgCbSelectAll.length",function(b){console.debug("mgCbSelectAll: $watch(): mgCbSelectAll array length changed to: %i",b);a.ngModel={bymgCbMember:!0};d.$render()})}}}]).directive("mgCbMember",["$parse","$timeout",function(f,c){return{scope:{},restrict:"AE",require:["ngModel","^mgCbGroup"],link:function(e,a,m,k){a=k[0];var g=-1,l=k[1];m.mgCbMemberIndex&&(g=
f(m.mgCbMemberIndex)(e.$parent));a.$parsers.push(function(a){console.debug("mgCbMember %i: $parsers(): view value changed to %s --\x3e notifying mg-cb-group",g,a);c(function(){l.notify("mgCbMember")});return a})}}}]).directive("mgCbClear",["mgCbSelectAllConfig",function(f){var c=f.memberModelKey||"__selected";return{scope:{mgCbMembers:"=mgCbClear"},restrict:"AE",require:["^mgCbGroup"],link:function(e,a,f,k){var g=k[0];if(e.mgCbMembers)a.on("click",function(){var a=e.mgCbMembers,f=a.length,d;e.$apply(function(){for(d=
0;d<f;d++)a[d][c]&&(a[d][c]=!1)});g.notify("mgCbClear")});else console.warn("mgCbClear: mg-cb-members collection is not passed. Not initialising the directive.")}}}])})();